/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var wechat = new (__webpack_require__(1));


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	'use strict'

	var net = __webpack_require__(2);

	var extend = function(des,src) {
		for(var i in src) {
			des[i] = src[i];
		}
		return des;
	}

	var Wechat = function(config) {
		this.config = {
			apiURL:'http://uniqueevents.sinaapp.com/wx/getJsAPIA2.php',
			wxURL:'http://res.wx.qq.com/open/js/jweixin-1.0.0.js',
			debug:false,
			type:'post',
			jsonp:false,
			url:encodeURI(location.href),
			data:{
				link:location.href,
				title:'',
				desc:'',
				imgUrl:'',
				success:null,
				cancel:null
			},
			timelineData:null
		}
		extend(this.config,config);
		this.init();
	}

	var proto = Wechat.prototype;

	proto.init = function() {
		var conf = this.config;
		this.timelineData = extend({},conf.data);
		this.appMessageData = extend({},conf.data); 
		if(conf.timelineData) {
			extend(this.timelineData,conf.timelineData);
		} else {
			this.timelineData.title = conf.data.desc;
		}
		var self = this;
		net.loadScript({
			url:conf.wxURL,
			success:function() {
				self.initShare();
			}
		});
	}

	proto.initShare = function() {
		var conf=this.config,self=this; 
		net.ajax({
			url:conf.apiURL,
			type:conf.type,
			data:{
				url:conf.url
			},
			jsonp:conf.jsonp,
			success:function(data) {
				self.initData(data);
			}
		});
	}

	proto.initData = function(data) {
		var conf=this.config,self=this;
		if(wx) {
			wx.config({
				debug:conf.debug, 
				appId:data.appId, 
				timestamp:data.timestamp, 
				nonceStr:data.nonceStr, 
				signature:data.signature,
				jsApiList: ['onMenuShareTimeline','onMenuShareAppMessage'] 
			});
			wx.ready(function(){
				wx.onMenuShareTimeline(self.timelineData);
				wx.onMenuShareAppMessage(self.appMessageData);
			});
		}
	}

	proto.shareToTimeline = function(data) {
		var obj = extend(this.timelineData,data);
		wx.onMenuShareTimeline(obj);
	}

	proto.shareToFriend = function(data) {
		var obj = extend(this.appMessageData,data);
		wx.onMenuShareAppMessage(obj);
	}

	module.exports = Wechat;


/***/ },
/* 2 */
/***/ function(module, exports) {

	'use strict'

	var extend = function(des,src) {
		for(var i in src) {
			des[i] = src[i];
		}
		return des;
	}

	var ajax = function(params) {
		if(params.jsonp) {
			var _jsonpID = +new Date;
			var _callback = 'Xing'+_jsonpID;
			params.data.callback = _callback;
			params.removeOnLoad = true;
			params.trigger = false;
			window[_callback] = function(data) {
				params.success && params.success(data);
				window[_callback] = null;
			}
			loadScript(params);
		} else {
			loadXHR(params);
		}
	}

	var loadXHR = function(params) {
		var xhr = new XMLHttpRequest();
		xhr.onload = function() {
			if(this.status === 200) {
				var data = JSON.parse(this.response);
				params.success && params.success(data);
			}
		}
		xhr.onerror = function() {
			params.error && params.error();
		}
		xhr.open(params.type,params.url,true);
		xhr.setRequestHeader('Content-Type','application/x-www-form-urlencoded');
		var data = serialize(params.data);
		xhr.send(data);
	}

	var loadScript = function(params) {
		var conf = {
			trigger:true
		}
		extend(conf,params);
		var script = document.createElement('script');
		script.onload = function() {
			conf.trigger && conf.success && conf.success();
			conf.removeOnLoad && document.body.removeChild(script);
		}
		script.onerror = function() {
			conf.error && conf.error();
		}
		var url = conf.data ? conf.url+'?'+serialize(conf.data) :
							  conf.url;
		script.src = url;
		document.body.appendChild(script);
	}

	var serialize = function(data) {
		var res = '';
		for(var i in data) {
			res += i+'='+data[i]+'&';
		}
		return res.split('&').slice(0,-1).join('&');
	}

	var net = {
		ajax:ajax,
		loadScript:loadScript
	}

	module.exports = net;

/***/ }
/******/ ]);